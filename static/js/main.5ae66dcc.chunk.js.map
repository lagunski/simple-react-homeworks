{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","Message","props","className","style","message","ava","src","avatar","block","concave","left_concave","text_block","n","name","m","t","time","messageData","HW1","Affair","s","affair","button_del","onClick","deleteAffairCallback","_id","priority","Affairs","mappedAffairs","data","map","a","key","main_block","affairs","buttons_filter","setFilter","defaultAffairs","HW2","useState","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","mainBlock","value","onChange","placeholder","errorText","button","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","trim","alert","HW3","setUsers","newUsers","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","errorInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","console","log","checkbox","checkbox_block","checked","HW4","text","setText","showAlert","setChecked","column","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","x","y","defaultState","getItem","parse","restoreState","HW6","setValue","undefined","PreJunior","Error404","JuniorPlus","Junior","PATH","Routes","path","exact","render","to","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5ae66dcc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1-bZS\",\"ava\":\"Message_ava__1r-uT\",\"block\":\"Message_block__3jNrC\",\"text_block\":\"Message_text_block__3tlUg\",\"n\":\"Message_n__3JJQt\",\"concave\":\"Message_concave__1Sv5H\",\"left_concave\":\"Message_left_concave__2zCsP\",\"m\":\"Message_m__31k4O\",\"t\":\"Message_t__3Qb6O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_block\":\"Affairs_main_block__dVW-M\",\"button_del\":\"Affairs_button_del__3LPzi\",\"buttons_filter\":\"Affairs_buttons_filter__3bagm\",\"priority\":\"Affairs_priority__1VDmc\",\"affairs\":\"Affairs_affairs__30M2O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"Greeting_mainBlock__3Hpmn\",\"error\":\"Greeting_error__1-6NV\",\"errorText\":\"Greeting_errorText__3C27r\",\"button\":\"Greeting_button__227Yr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__10Zbj\",\"errorInput\":\"SuperInputText_errorInput__UiWBK\",\"error\":\"SuperInputText_error__1OosL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3qAuR\",\"radio\":\"SuperCheckbox_radio__z9Ugp\",\"checkbox_block\":\"SuperCheckbox_checkbox_block__2pU6N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3MKo8\",\"red\":\"SuperButton_red__3XVVN\",\"infinite-spinning\":\"SuperButton_infinite-spinning__bu1Dv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBlock\":\"App_inputBlock__Hyaa1\",\"someClass\":\"App_someClass__1uk94\",\"error\":\"App_error__AOmnW\",\"errorText\":\"App_errorText__3txuX\",\"button\":\"App_button__2JNQM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3UCom\",\"column\":\"HW4_column__1M3lt\"};","import React from \"react\";\n\nfunction Header() {\n    return (\n        <div>\n            // add NavLinks\n\n        </div>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\nimport {messageDataType} from \"./HW1\";\nimport style from './Message.module.css'\n\nfunction Message(props: messageDataType) {\n    return (\n        <div className={style.message}>\n            <div className={style.ava}>\n                <img src={props.avatar}/>\n            </div>\n            <div className={style.block}>\n                <div className={style.concave}>\n                    <div className={style.left_concave}></div>\n                </div>\n\n                <div className={style.text_block}>\n\n                    <div className={style.n}>{props.name}</div>\n                    <div className={style.m}>{props.message} </div>\n                    <div className={style.t}>{props.time}</div>\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\n\nexport default Message;","import React from \"react\";\nimport Message from \"./Message\";\n\n\nexport type messageDataType = {\n    avatar: string,\n    name: string,\n    message: string,\n    time: string\n}\n\nexport const messageData: messageDataType = {\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n    name: \"Roman\",\n    message: \"Hi! How are you?\",\n    time: '15:15'\n};\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n\n        </div>\n    );\n}\n\nexport default HW1;\n","import React from \"react\";\nimport {AffairType} from \"./HW2\";\nimport s from \"./Affairs.module.css\"\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    };// need to fix\n\n    return (\n        <div className={s.affair}>\n            <div>\n                {props.affair.name}\n                <span className={s.button_del}>\n                <button onClick={deleteCallback}>X</button>\n                </span>\n            </div>\n            <div className={s.priority}>\n                Priority: {props.affair.priority}\n            </div>\n        </div>\n    );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, FilterType} from \"./HW2\";\nimport s from \"./Affairs.module.css\"\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter(\"all\")\n    }; // need to fix\n    const setHigh = () => {\n        props.setFilter(\"high\")\n    };\n    const setMiddle = () => {\n        props.setFilter(\"middle\")\n    };\n    const setLow = () => {\n        props.setFilter(\"low\")\n    };\n\n    return (\n        <div className={s.main_block}>\n            <div className={s.affairs}>\n                {mappedAffairs}\n            </div>\n            <div className={s.buttons_filter}>\n                <button onClick={setAll}>All</button>\n                <button onClick={setHigh}>High</button>\n                <button onClick={setMiddle}>Middle</button>\n                <button onClick={setLow}>Low</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\n\n// types\nexport type AffairPriorityType = \"low\" | \"middle\" | \"high\"; // need to fix any\nexport type AffairType = {\n    _id: number\n    name:string\n    priority: AffairPriorityType\n}; // need to fix any\nexport type FilterType = \"all\" | AffairPriorityType;\n\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"anime\", priority: \"low\"},\n    {_id: 3, name: \"games\", priority: \"low\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array <AffairType> => { // need to fix any\n    if (filter === \"all\") return affairs;\n    else return affairs.filter(a=>a.priority===filter); // need to fix\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array <AffairType> => { // need to fix any\n    return affairs.filter(a=>a._id!==_id); // need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, {ChangeEvent} from \"react\";\nimport s from \"./Greeting.module.css\";\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = s.error; // need to fix with (?:)\n\n\n    return (\n        <div className={s.mainBlock}>\n            <input value={name}\n                   onChange={setNameCallback}\n                   className={error ? inputClass : \"\"}\n                   placeholder=\"Введите имя\"\n            />\n            <span className={s.errorText}>{error}</span>\n            <div> Количество людей: {totalUsers}</div>\n            <button onClick={addUser} className={s.button}>\n                Добавить\n            </button>\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {ChangeEvent, useState} from \"react\";\nimport Greeting from \"./Greeting\";\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name:string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users,addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\"); // need to fix any\n    const [error, setError] = useState<string>(\"\"); // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n\n        setName(e.currentTarget.value); // need to fix\n\n    };\n    const addUser = () => {\n        if(name.trim().length!==0) {\n            addUserCallback(name)\n            alert(`Hello ${name} !`);\n            setName(\"\")// need to fix\n        } else {\n            setError(\"Error error error\")\n            setName(\"\")\n\n        }\n    };\n\n    const totalUsers = users.length; // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport {v1} from \"uuid\"\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        let user = {_id: v1(), name: name};\n        let newUsers = [user, ...users]\n        setUsers(newUsers); // need to fix\n    }\n\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = error ? s.superInput : `${s.errorInput} ${className} `; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n\n    console.log({\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    })\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange && onChange(e);\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label className={s.checkbox_block}>\n\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    const error = text ? \"\" : \"error\";\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div>\n            {/*<hr/>*/}\n            homeworks 4\n\n            <div className={s.column}>\n                {/*should work (должно работать)*/}\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    /*className={s.blue}*/ // проверьте, работает ли смешивание классов\n                />\n\n                {/*should work (должно работать)*/}\n                <SuperButton\n                    red = {false}// пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    it-incubator.by {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            {/*<hr/>\n            для личного творчества, могу проверить\n            <AlternativeSuperInputText/>\n            <AlternativeSuperButton/>\n            <AlternativeSuperCheckbox/>\n            <hr/>*/}\n        </div>\n    );\n}\n\nexport default HW4;","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\n\n    const onEnterCallback = () => {\n        // setEditMode(); // выключить editMode при нажатии Enter\n\n        onEnter && onEnter();\n    };\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        // setEditMode(); // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e);\n    };\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        // setEditMode(); // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e);\n    };\n\n    const spanClassName = `${\"сделать красивый стиль для спана\"} ${className}`;\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    );\n}\n\nexport default SuperEditableSpan;\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state);\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    const stateAsString = localStorage.getItem(key);\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\n    return defaultState;\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// использование:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке \"test\"\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\n\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\n","import React, {useState} from \"react\";\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\n\nfunction HW6() {\n    const [value, setValue] = useState<string>(\"\");\n\n    const save = () => {\n        saveState<string>(\"editable-span-value\", value);\n    };\n    const restore = () => {\n        // setValue();\n    };\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : \"enter text...\"}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW6;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n\n        </div>\n    );\n}\n\nexport default PreJunior;\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from \"react\";\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React from \"react\";\n\n\nfunction JuniorPlus() {\n    return (\n        <div>\n\n        </div>\n    );\n}\n\nexport default JuniorPlus;\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\n\nfunction Junior() {\n    return (\n        <div>\n\n\n        </div>\n    );\n}\n\nexport default Junior;\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from \"react\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\nimport JuniorPlus from \"./pages/JuniorPlus\";\nimport Junior from \"./pages/Junior\";\nimport { Switch, Redirect, Route } from \"react-router-dom\";\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n    JUNIOR: \"/junior\",\n    JUNIOR_PLUS: \"/junior-plus\",\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.JUNIOR}/>}/>\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.JUNIOR_PLUS}/>}/>\n                <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\n                // add routes\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from \"react\";\nimport s from \"./App.module.css\";\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n           {/* <HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}